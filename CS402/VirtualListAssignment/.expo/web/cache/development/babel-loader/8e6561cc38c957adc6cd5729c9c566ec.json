{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nfunction _createForOfIteratorHelperLoose(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (it) return (it = it.call(o)).next.bind(it); if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; return function () { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useEffect, useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport VirtualizedList from \"react-native-web/dist/exports/VirtualizedList\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar styles = StyleSheet.create({\n  innerButton: {\n    marginRight: 10,\n    marginTop: 75,\n    marginBottom: 0,\n    width: 90\n  },\n  container: {\n    flex: 4,\n    paddingTop: 22,\n    flexDirection: \"column\",\n    borderWidth: 5\n  },\n  utilButtons: {\n    marginRight: 10,\n    marginBottom: 0,\n    width: 90,\n    marginTop: 10\n  },\n  list: {\n    flex: 20,\n    paddingTop: 2,\n    justifyContent: 'top'\n  },\n  buttonContainer: {\n    flexDirection: 'row',\n    backgroundColor: 'orange',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  textField: {\n    height: 40,\n    margin: 12,\n    width: 310,\n    color: 'white',\n    borderWidth: 1,\n    borderColor: 'white',\n    padding: 10\n  },\n  textContainer: {\n    marginTop: 0,\n    backgroundColor: 'orange',\n    alignItems: 'center',\n    textAlign: 'center',\n    justifyContent: 'center'\n  },\n  item: {\n    padding: 10,\n    fontSize: 22,\n    height: 44,\n    color: \"black\",\n    flex: 0.2\n  }\n});\nvar dataList = [];\n\nvar Item = function Item(_ref) {\n  var item = _ref.item,\n      onPress = _ref.onPress,\n      backgroundColor = _ref.backgroundColor,\n      textColor = _ref.textColor;\n  return _jsx(TouchableOpacity, {\n    onPress: onPress,\n    style: [styles.item, backgroundColor],\n    children: _jsx(Text, {\n      style: [textColor],\n      children: item.key\n    })\n  });\n};\n\nvar VirtualList = function VirtualList() {\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      list = _useState2[0],\n      setList = _useState2[1];\n\n  useEffect(function _callee() {\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(loadButtonHandler());\n\n          case 2:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }, []);\n\n  var _useState3 = useState(\"Add an item\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      text = _useState4[0],\n      onChangeText = _useState4[1];\n\n  function toggleItem(key) {\n    var newList = list.map(function (listItem) {\n      if (listItem.key === key) {\n        listItem.selected = !listItem.selected;\n      }\n\n      return listItem;\n    });\n    setList(newList);\n  }\n\n  var renderItem = function renderItem(_ref2) {\n    var item = _ref2.item;\n\n    var _ref3 = item.selected ? ['black', 'white'] : ['white', 'black'],\n        _ref4 = _slicedToArray(_ref3, 2),\n        backgroundColor = _ref4[0],\n        color = _ref4[1];\n\n    return _jsx(Item, {\n      item: item,\n      onPress: function onPress() {\n        return toggleItem(item.key);\n      },\n      backgroundColor: {\n        backgroundColor: backgroundColor\n      },\n      textColor: {\n        color: color\n      }\n    });\n  };\n\n  function deleteItems() {\n    setList(list.filter(function (listItem) {\n      return !listItem.selected;\n    }));\n  }\n\n  function addItem() {\n    var item = {\n      key: text,\n      selected: false\n    };\n    var count = list.filter(function (listItem) {\n      return listItem.key === text;\n    }).length;\n\n    var newList = _toConsumableArray(list);\n\n    if (!count) {\n      var addIndex = list.findIndex(function (listItem) {\n        return listItem.selected;\n      });\n      addIndex = addIndex >= 0 ? addIndex : 0;\n      newList.splice(addIndex, 0, item);\n      setList(newList);\n    } else {\n      alert(\"Duplicate entry for item \\\"\" + text + \"\\\"\");\n    }\n  }\n\n  var getItemCount = function getItemCount(data) {\n    return list.length;\n  };\n\n  var getItem = function getItem(index, key) {\n    return list[key];\n  };\n\n  function loadButtonHandler() {\n    var baseUrl, username, url;\n    return _regeneratorRuntime.async(function loadButtonHandler$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            baseUrl = \"https://cs.boisestate.edu/~scutchin/cs402/codesnips/loadjson.php\";\n            username = \"aidanleuck\";\n            url = new URL(baseUrl);\n            url.searchParams.append(\"user\", username);\n            _context2.next = 6;\n            return _regeneratorRuntime.awrap(loadRemoteList(url.toString()));\n\n          case 6:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  function saveButtonHandler() {\n    var selected, json, baseUrl, username, url;\n    return _regeneratorRuntime.async(function saveButtonHandler$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            if (!(list.length > 0)) {\n              _context3.next = 10;\n              break;\n            }\n\n            selected = list.filter(function (listItem) {\n              return listItem.selected;\n            });\n            json = \"\";\n\n            if (selected.length > 0) {\n              json = JSON.stringify(selected);\n            } else {\n              json = JSON.stringify(list);\n            }\n\n            baseUrl = \"https://cs.boisestate.edu/~scutchin/cs402/codesnips/savejson.php\";\n            username = \"aidanleuck\";\n            url = new URL(baseUrl);\n            url.searchParams.append(\"user\", username);\n            _context3.next = 10;\n            return _regeneratorRuntime.awrap(saveList(url, json));\n\n          case 10:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  function loadRemoteList(url) {\n    var response, data, newList;\n    return _regeneratorRuntime.async(function loadRemoteList$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            _context4.prev = 0;\n            _context4.next = 3;\n            return _regeneratorRuntime.awrap(fetch(url));\n\n          case 3:\n            response = _context4.sent;\n            _context4.next = 6;\n            return _regeneratorRuntime.awrap(response.json());\n\n          case 6:\n            data = _context4.sent;\n            newList = _toConsumableArray(list);\n            newList = newList.concat(data);\n            setList(newList);\n            _context4.next = 15;\n            break;\n\n          case 12:\n            _context4.prev = 12;\n            _context4.t0 = _context4[\"catch\"](0);\n            console.log(_context4.t0);\n\n          case 15:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, null, null, [[0, 12]], Promise);\n  }\n\n  function saveList(url, json) {\n    var requestOptions, response;\n    return _regeneratorRuntime.async(function saveList$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            console.log(json);\n            requestOptions = {\n              method: 'POST',\n              headers: {\n                'Content-Type': 'application/json'\n              },\n              body: json\n            };\n            _context5.prev = 2;\n            _context5.next = 5;\n            return _regeneratorRuntime.awrap(fetch(url, requestOptions));\n\n          case 5:\n            response = _context5.sent;\n            console.log(response);\n            _context5.next = 12;\n            break;\n\n          case 9:\n            _context5.prev = 9;\n            _context5.t0 = _context5[\"catch\"](2);\n            console.log(_context5.t0);\n\n          case 12:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, null, null, [[2, 9]], Promise);\n  }\n\n  function loadRemoteItem(url, index) {\n    return _regeneratorRuntime.async(function loadRemoteItem$(_context6) {\n      while (1) {\n        switch (_context6.prev = _context6.next) {\n          case 0:\n          case \"end\":\n            return _context6.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  function splitList() {\n    var newList = [];\n\n    for (var _iterator = _createForOfIteratorHelperLoose(list), _step; !(_step = _iterator()).done;) {\n      var listItem = _step.value;\n\n      if (listItem.selected) {\n        var newItems = listItem.key.split(\",\");\n        newItems.map(function (item) {\n          var obj = {\n            key: item.trim(),\n            selected: false\n          };\n          newList.push(obj);\n        });\n      } else {\n        newList.push(listItem);\n      }\n    }\n\n    setList(newList);\n  }\n\n  function joinList() {\n    var newList = [];\n    var selectedItems = [];\n    var firstSelectedIndex = null;\n\n    for (var i = 0; i < list.length; i++) {\n      var listItem = list[i];\n\n      if (listItem.selected) {\n        var _firstSelectedIndex;\n\n        firstSelectedIndex = (_firstSelectedIndex = firstSelectedIndex) != null ? _firstSelectedIndex : i;\n        selectedItems.push(listItem.key);\n      } else {\n        newList.push(listItem);\n      }\n    }\n\n    var addItem = {};\n    addItem.key = selectedItems.join(\", \");\n    addItem.selected = false;\n\n    if (firstSelectedIndex != null) {\n      newList.splice(firstSelectedIndex, 0, addItem);\n      setList(newList);\n    }\n  }\n\n  var buttons = _jsxs(View, {\n    children: [_jsxs(View, {\n      style: styles.buttonContainer,\n      children: [_jsx(View, {\n        style: styles.innerButton,\n        children: _jsx(Button, {\n          style: true,\n          title: \"+\",\n          onPress: addItem\n        })\n      }), _jsx(View, {\n        style: styles.innerButton,\n        children: _jsx(Button, {\n          title: \"-\",\n          onPress: deleteItems\n        })\n      }), _jsx(View, {\n        style: styles.innerButton,\n        children: _jsx(Button, {\n          title: \"Split\",\n          onPress: splitList\n        })\n      }), _jsx(View, {\n        style: styles.innerButton,\n        children: _jsx(Button, {\n          title: \"Join\",\n          onPress: joinList\n        })\n      })]\n    }), _jsxs(View, {\n      style: styles.buttonContainer,\n      children: [_jsx(View, {\n        style: styles.utilButtons,\n        children: _jsx(Button, {\n          title: \"Load List\",\n          onPress: loadButtonHandler\n        })\n      }), _jsx(View, {\n        style: styles.utilButtons,\n        children: _jsx(Button, {\n          title: \"Save List\",\n          onPress: saveButtonHandler\n        })\n      })]\n    }), _jsx(View, {\n      style: styles.textContainer,\n      children: _jsx(TextInput, {\n        style: styles.textField,\n        onChangeText: onChangeText,\n        value: text\n      })\n    })]\n  });\n\n  var VirtualList = _jsxs(View, {\n    children: [buttons, _jsx(SafeAreaView, {\n      style: styles.container,\n      children: _jsx(VirtualizedList, {\n        styles: styles.list,\n        data: dataList,\n        persistentScrollbar: true,\n        initialNumToRender: 4,\n        getItemCount: getItemCount,\n        getItem: getItem,\n        keyExtractor: function keyExtractor(item, index) {\n          return index;\n        },\n        renderItem: renderItem\n      })\n    })]\n  });\n\n  return VirtualList;\n};\n\nexport default VirtualList;","map":{"version":3,"sources":["/home/aidanleuck/Code/BSURepo/CS402/VirtualListAssignment/App.js"],"names":["React","useEffect","useState","styles","StyleSheet","create","innerButton","marginRight","marginTop","marginBottom","width","container","flex","paddingTop","flexDirection","borderWidth","utilButtons","list","justifyContent","buttonContainer","backgroundColor","alignItems","textField","height","margin","color","borderColor","padding","textContainer","textAlign","item","fontSize","dataList","Item","onPress","textColor","key","VirtualList","setList","loadButtonHandler","text","onChangeText","toggleItem","newList","map","listItem","selected","renderItem","deleteItems","filter","addItem","count","length","addIndex","findIndex","splice","alert","getItemCount","data","getItem","index","baseUrl","username","url","URL","searchParams","append","loadRemoteList","toString","saveButtonHandler","json","JSON","stringify","saveList","fetch","response","concat","console","log","requestOptions","method","headers","body","loadRemoteItem","splitList","newItems","split","obj","trim","push","joinList","selectedItems","firstSelectedIndex","i","join","buttons"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { StyleSheet, Text, View, TouchableOpacity, Button, TextInput, VirtualizedList, SafeAreaView } from 'react-native';\n\n// Styles \nconst styles = StyleSheet.create({\n  innerButton: {\n    marginRight: 10,\n    marginTop: 75,\n    marginBottom: 0,\n    width: 90,\n  },\n  container:{\n    flex: 4,\n    paddingTop: 22,\n    flexDirection: \"column\",\n    borderWidth: 5\n  },\n  utilButtons:{\n    marginRight: 10,\n    marginBottom: 0,\n    width: 90,\n    marginTop: 10\n  },\n  list:{\n   flex: 20,\n   paddingTop: 2,\n   justifyContent: 'top',  \n  },\n  buttonContainer: {\n    flexDirection: 'row',\n    backgroundColor: 'orange',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  textField: {\n    height: 40,\n    margin: 12,\n    width: 310,\n    color: 'white',\n    borderWidth: 1,\n    borderColor: 'white',\n    padding: 10,\n  },\n  textContainer: {\n    marginTop: 0,\n    backgroundColor: 'orange',\n    alignItems: 'center',\n    textAlign: 'center',\n    justifyContent: 'center'\n  },\n  item: {\n    padding: 10,\n    fontSize: 22,\n    height: 44,\n    color: \"black\",\n    flex: 0.2\n  }\n});\n\nlet dataList = [];\n\n/**\n * Describes an item component\n * @param {*} item - item object containing key and selected\n * @param {*} onPress - Function to execute when list item is pressed\n * @param {*} backgroundColor - Background color to change to on press\n * @param {*} textColor - color of the text\n * @returns Built item functional component\n */\nconst Item = ({ item, onPress, backgroundColor, textColor }) => (\n  <TouchableOpacity onPress={onPress} style={[styles.item, backgroundColor]}>\n    <Text style={[textColor]}>{item.key}</Text>\n  </TouchableOpacity>\n);\n\n/**\n * Builds up a FlatList\n * @returns A Flatlist\n */\nconst VirtualList = () => {\n\n  // States\n  const [list, setList] = useState([]);\n  useEffect(async () => {\n    await loadButtonHandler();\n  }, []);\n\n  const [text, onChangeText] = useState(\"Add an item\")\n\n\n  // Toggles an item between selected and not selected\n  // key : key in list to find\n  function toggleItem(key) {\n    const newList = list.map((listItem) => {\n      if (listItem.key === key) {\n        listItem.selected = !listItem.selected;\n      }\n      return listItem;\n    })\n    setList(newList);\n  }\n\n  /**\n   * Describes how an item should be rendered\n   * @param {*} item item object from array\n   */\n  const renderItem = ({ item }) => {\n\n    // Toggles black/white background color depending on selection\n    const [backgroundColor, color] = item.selected ? ['black', 'white'] : ['white', 'black'];\n    return (\n      <Item\n        item={item}\n        onPress={() => toggleItem(item.key)}\n        backgroundColor={{ backgroundColor }}\n        textColor={{ color }}>\n      </Item>\n    )\n  }\n\n\n  /**\n   * Deletes selected items\n   */\n  function deleteItems() {\n    setList(list.filter((listItem) => !listItem.selected))\n  }\n\n  \n  /**\n   * Adds an item to the lsit\n   */\n  function addItem() {\n    let item = {\n      key: text,\n      selected: false\n    }\n\n    // Check for duplicate entries\n    let count = list.filter((listItem) => listItem.key === text).length\n    let newList = [...list];\n\n    // If no duplicates\n    if (!count) {\n\n      // Find the first selected index\n      let addIndex = list.findIndex((listItem) => listItem.selected)\n\n      // If there is a selected index then keep same value otherwise just add to 0\n      addIndex = addIndex >= 0 ? addIndex : 0;\n\n      // Splice to add item into the array\n      newList.splice(addIndex, 0, item);\n      setList(newList);\n    }\n    else {\n      alert(`Duplicate entry for item \"${text}\"`);\n    }\n  }\n\n  // Gets the size of the list for internal use in the virtual list\n  const getItemCount = (data) => list.length;\n\n  // Gets the item to return to the virtual list so it can perform a render\n  const getItem = (index, key) => list[key];\n\n  /**\n   * Handler for load button that sets server endpoint and proceeds to load data in the list\n   */\n  async function loadButtonHandler() {\n    let baseUrl = \"https://cs.boisestate.edu/~scutchin/cs402/codesnips/loadjson.php\"\n    let username = \"aidanleuck\"\n\n    let url = new URL(baseUrl);\n    url.searchParams.append(\"user\", username)\n\n    await loadRemoteList(url.toString());\n  }\n\n  /**\n   * Handles save button action, checks if any item is selected and only saves that item\n   */\n  async function saveButtonHandler() {\n    if (list.length > 0) {\n      let selected = list.filter((listItem) => listItem.selected);\n      let json = \"\";\n      if (selected.length > 0) {\n        json = JSON.stringify(selected);\n      }\n      else {\n        json = JSON.stringify(list);\n      }\n      let baseUrl = \"https://cs.boisestate.edu/~scutchin/cs402/codesnips/savejson.php\"\n      let username = \"aidanleuck\"\n\n      let url = new URL(baseUrl);\n      url.searchParams.append(\"user\", username)\n\n      await saveList(url, json)\n    }\n\n  }\n\n  /**\n   * Loads from a remote url and updates the list with the specified values\n   * @param {} url - The url to load data from\n   */\n  async function loadRemoteList(url) {\n    try {\n\n      let response = await fetch(url);\n      let data = await response.json();\n\n      let newList = [...list];\n      newList = newList.concat(data);\n      \n      setList(newList);\n    }\n    catch (err) {\n      console.log(err);\n    }\n\n  }\n\n  /**\n   * Saves the list to database\n   * @param {*} url - The url to save data to\n   * @param {*} json - The json to send to the server\n   */\n  async function saveList(url, json) {\n    console.log(json);\n    const requestOptions = {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: json\n    };\n\n    try {\n      const response = await fetch(url, requestOptions);\n      console.log(response);\n    }\n    catch (err) {\n      console.log(err);\n    }\n  }\n\n  async function loadRemoteItem(url, index) {\n\n  }\n\n  /**\n   * Splits list items separated by commas\n   */\n  function splitList() {\n    let newList = [];\n    for (const listItem of list) {\n\n      // Finds selected items\n      if (listItem.selected) {\n        let newItems = listItem.key.split(\",\");\n\n        // Builds up the object and deselects them\n        newItems.map((item) => {\n          let obj = { key: item.trim(), selected: false }\n          newList.push(obj);\n        })\n      }\n      else {\n        newList.push(listItem);\n      }\n    }\n    setList(newList);\n  }\n\n  /**\n   * Joins list items separated by commas\n   */\n  function joinList() {\n    let newList = [];\n    let selectedItems = [];\n    let firstSelectedIndex = null;\n\n    for (let i = 0; i < list.length; i++) {\n      const listItem = list[i];\n\n      // Gets selected items and saves the first found index\n      if (listItem.selected) {\n        firstSelectedIndex = firstSelectedIndex ?? i;\n        selectedItems.push(listItem.key);\n      }\n      else {\n        newList.push(listItem);\n      }\n    }\n\n    // Adds new item\n    let addItem = {};\n    addItem.key = selectedItems.join(\", \")\n    addItem.selected = false;\n\n    // If there was a first selected index splice in\n    if (firstSelectedIndex != null) {\n      newList.splice(firstSelectedIndex, 0, addItem);\n      setList(newList)\n    }\n  }\n\n  const buttons = <View><View style={styles.buttonContainer}>\n    <View style={styles.innerButton}>\n      <Button style title=\"+\"\n        onPress={addItem} />\n    </View>\n    <View style={styles.innerButton}>\n      <Button title=\"-\"\n        onPress={deleteItems} />\n    </View>\n    <View style={styles.innerButton}>\n      <Button title=\"Split\"\n        onPress={splitList} />\n    </View>\n    <View style={styles.innerButton}>\n      <Button\n        title=\"Join\"\n        onPress={joinList} />\n    </View>\n  </View>\n    <View style={styles.buttonContainer}>\n      <View style={styles.utilButtons}>\n        <Button title=\"Load List\"\n          onPress={loadButtonHandler} />\n      </View>\n      <View style={styles.utilButtons}>\n        <Button title=\"Save List\"\n          onPress={saveButtonHandler} />\n      </View>\n    </View>\n    <View style={styles.textContainer}>\n      <TextInput style={styles.textField}\n        onChangeText={onChangeText}\n        value={text}\n      />\n    </View>\n  </View>\n\n  /**\n   * Main virtual list render method\n   */\n  const VirtualList = <View>\n    {buttons}\n    <SafeAreaView style ={styles.container}>\n      <VirtualizedList\n        styles={styles.list}\n        data={dataList}\n        persistentScrollbar={true}\n        initialNumToRender={4}\n        getItemCount={getItemCount}\n        getItem={getItem}\n        keyExtractor={(item, index) => index}\n        renderItem={renderItem}\n\n      />\n    </SafeAreaView>\n  </View>\n  return (VirtualList)\n}\n\nexport default VirtualList;"]},"metadata":{},"sourceType":"module"}